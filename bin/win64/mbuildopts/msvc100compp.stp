#  $Revision: 1.1.6.3 $
#  Copyright 2007-2011 The MathWorks, Inc.

sub msvc100compp 
{
    my $input = shift;
    my $default_location = "C:\\Program Files (x86)\\Microsoft Visual Studio 10.0";
    my $sdk_dir = "";
    my $registry_lookup_fcn = $input->{"registry_lookup"};

    # Attempt to find the Windows sdk that corresponds to VS2010
    my $sdk_dir =  &$registry_lookup_fcn("SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v7.0A" , "InstallationFolder");

    my @language_handled = ('C', 'CPP', 'COM');
    my $locate_fcn = sub {
        my @valid_locations = ();
        my $env_location;
        my $registry_location;
        my $candidate_location;

        my $is_valid_root_fcn = sub {
            #===================================================================
            # is_valid_root_fcn: Validates the version and file structure of the
            # candidate_location.
            #
            # Check install and location using the 32-bit CL.EXE; check for 
            # 64-bit compiler later.  This allows 32-bit-only installs to appear  
            # as installed, then throw an error at selection-time.  
            # This is easier to debug than not listing the compiler.
            # 
            # Since MSVC 2010 Professional ed. and the Express ed. use the same
            # root_location, use the directory structure to differentiate 
            # between the two.
            #===================================================================

            my $candidate_location = shift;
            my $isvalid = 0;
            if ($candidate_location ne "" &&  
                -e "$candidate_location\\VC\\bin\\cl.exe" &&
                -e "$candidate_location\\Common7\\IDE\\devenv.exe" ) { 
                $oldPath = $ENV{'PATH'};
                $ENV{'PATH'} = "$candidate_location\\Common7\\IDE;$oldPath";
                if (&correct_version("$candidate_location\\VC\\bin\\cl.exe","16.0")){ 
                    $isvalid = 1;
                }
                $ENV{'PATH'} = "$oldPath";
            }
            return $isvalid;
        };

        # Search the default environment variable location.               
        $env_location = $ENV{'VS100COMNTOOLS'}; 
        $env_location =~ s|\\+Common7\\+Tools\\*$||i; 
        $candidate_location = $env_location;
        if (&$is_valid_root_fcn($candidate_location)) {
            push(@valid_locations, $candidate_location);
        }

        # Search the registry. 
        $registry_location = &$registry_lookup_fcn("SOFTWARE\\Microsoft\\VisualStudio\\10.0\\" .
                                            "Setup\\VS", "ProductDir");
        $candidate_location = $registry_location;
        if (&$is_valid_root_fcn($candidate_location)) {
            push(@valid_locations, $candidate_location);
        }

        # Search the default install location. 
        $candidate_location = $default_location;
        if (&$is_valid_root_fcn($candidate_location)) {
            push(@valid_locations, $candidate_location);
        }

        return @valid_locations;
    };

    my $root_val = sub {
        my $erred = 0;
        my $err_msg, $warn_msg;
        my $base_directory = shift;
        if (!-e "$base_directory\\VC\\bin\\amd64\\cl.exe"){
            $err_msg = "\n*****************************************************************************\n" .
                  "  Error: Could not find the 64-bit compiler.  This may indicate that the \n" .
                  "         \"X64 Compilers and Tools\" or the Microsoft Windows Software \n" .
                  "         Development Kit (SDK) is not installed.  To build 64-bit applications \n" .
                  "         or components Microsoft Visual C++ 2010 requires that these two \n" .
                  "         packages are installed properly. \n" .
                  "*****************************************************************************\n";
            $erred = 1;
        }
        my $sdk_location = &$registry_lookup_fcn("SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v7.0A" , 
                                  "InstallationFolder");
        if ($sdk_location eq "" ||
            !-e "$sdk_location\\bin\\mt.exe"){
            $err_msg = "\n*****************************************************************************\n" .
                  "  Error: Could not find the Microsoft Windows Software Development Kit (SDK). \n" .
                  "         This may indicate that the Microsoft Windows Software Development \n" .
                  "         Kit (SDK) or the \"X64 Compilers and Tools\" is not installed.  \n" .
                  "         To build 64-bit applications or components Microsoft Visual C++ 2010 \n" .
                  "         requires that these two packages are installed properly. \n" .
                  "*****************************************************************************\n";
            $erred = 1;
        }

        if( !$erred) {
          $warn_msg = "\n" .
              "****************************************************************************\n" .
              "  Warning: Applications/components generated using Microsoft Visual C++     \n" .
              "           2010 require that the Microsoft Visual Studio 2010 run-time      \n" .
              "           libraries be available on the computer used for deployment.      \n" .
              "           To redistribute your applications/components, be sure that the   \n" .
              "           deployment machine has these run-time libraries.                 \n" .
              "****************************************************************************\n";
        }

        return ($err_msg, $warn_msg);
    };

# In the case of the VS2010 compiler the link_val key is used to specify
# the location of the SDK

    return {
        "vendor_name"      => "Microsoft Visual C++ 2010",
        "version"          => "",                          #This version is left blank intentionally.
        "group_id"         => "MSVC",
        "serial"           => 10.0,
        "root_var"         => "VSINSTALLDIR",
        "optfile_name"     => "msvc100compp.bat",
        "default_location" => $default_location,
        "language_handled" => \@language_handled,
        "root_val"         => $root_val,
        "link_val"         => $sdk_dir,
        "locate"           => $locate_fcn,
        "post_setup_hook"  => $post_setup_hook,
        };
}
1;
